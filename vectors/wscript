#!/usr/bin/python3

from glob import glob
from pathlib import Path
from waflib.Context import Context


instruments = ['US2', 'RMI', 'RMIFace', 'RMICompass',
               'AGBShield', 'AGBBall', 'CentralPanelBackgroud', 'VBMOutline', 'PU56']


textures = [
    "AGBBall",
    "AGBShield",
    "CentralPanel",
    "CentralPanelBackgroud",
    "EngineFailure",
    "EngineFault",
    "EngineSurge",
    "KPI",
    "PU56",
    "ReverseOn",
    "RMI",
    "RMICompass",
    "RMIFace",
    "RMIFlagKur1",
    "RMIFlagKur2",
    "RMIFlagMk",
    "RMILEDLeft",
    "RMILEDRight",
    "RMILeftHandle",
    "RMILeftHandleShape",
    "RMINeedleLeft",
    "RMINeedleRight",
    "RMIRightHandle",
    "RMIRightHandleShape",
    "StabTrimDown",
    "StabTrimUp",
    "US2",
    "US2Needle",
    "US2NeedleShape",
    "VBMBase",
    "VBMFace",
    "VBMFaceShape",
    "VBMLongNeedle",
    "VBMLongNeedleShape",
    "PU56POS",
    "PU56ZPU",
    "PU56GNAV",
    "PU56KZONA",
    "PU56AP",
    "PU56OTKLAP",
    "PU56AT",
    "PU56STAB",
    "PU56OTKLAT",
    "PU56SKOR",
    "PU56ESHEL",
    "PU56VEIS",
    "PU56VNAV",
    "PU56VSKOR",


]


def configure(ctx):
    pass


def build(ctx: Context):
    # Web generation -> index.html
    sources = ctx.path.ant_glob("public/*", recursive=True)
    sources += ctx.path.ant_glob("src/*", recursive=True)
    sources += ctx.path.ant_glob("yarn.lock")
    sources += ctx.path.ant_glob("package.json")
    sources += ctx.path.ant_glob("export_svg.js")
    targets = []
    for t in textures:
        targets.append(f"{t}.svg")

    ctx(rule="cd ../vectors && yarn && yarn build && cp -rvf build/index.html ../build/vectors/",
        source=sources, target="index.html")
    ctx.add_group()

    ctx(rule="node ../vectors/export_svg.js vectors/index.html vectors/", target=targets)
    ctx.add_group()

    sources = []
    targets = []
    for p in textures:
        sources.append(f"vectors/{p}.svg")
        targets.append(f"{p}.png")

    for i in range(len(sources)):
        ctx(rule=f"{ctx.env.INK} --export-png-color-mode=RGBA_16 -o ${{TGT}} -d 300 {sources[i]}",
            target=f"../texture/{targets[i]}")
    # ctx.add_group()
    # for i in textures:
    #     ctx(
    #         rule=f"python ../vectors/resize.py ./texture/{i}_resize.png ${{TGT}}", target=f"../texture/{i}.png")
